{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/Controls/index.js","components/Balance/index.js","components/TransactionHistory/index.js","components/Dashboard/index.js","App.js","index.js"],"names":["module","exports","Controls","operation","type","min","name","placeholder","onClick","style","cursor","Balance","balance","deposit","withdraw","TransactionHistory","transactions","map","el","key","id","amount","date","shortid","require","toast","configure","Dashboard","state","e","value","target","parentElement","firstElementChild","depType","textContent","newTransaction","generate","Number","Date","toLocaleString","toastSettings","position","autoClose","pauseOnHover","setState","ps","TYPE","ERROR","sumTransactionsOfType","WARNING","arr","reduce","acc","this","className","s","dashboard","controls","length","table","textAlign","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAW,4BAA4B,QAAU,2BAA2B,MAAQ,yBAAyB,MAAQ,kD,yJCkBjKC,EAhBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACf,oCACE,2BAAOC,KAAK,SAASC,IAAI,OAAOC,KAAK,SAASC,YAAY,MAC1D,4BAAQC,QAASL,EAAWC,KAAK,SAASK,MAAO,CAAEC,OAAQ,YAA3D,WAGA,4BAAQF,QAASL,EAAWC,KAAK,SAASK,MAAO,CAAEC,OAAQ,YAA3D,cCMWC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,SAArB,OACd,oCAEE,6CAASD,EAAT,KAEA,6CAASC,EAAT,KACA,0CAAgBF,EAAhB,OCYWG,EAlBY,SAAC,GAAD,SAAGC,aACfC,KAAI,SAAAC,GAAE,OACjB,wBAAIC,IAAKD,EAAGE,IACV,4BAAKF,EAAGd,MACR,4BAAKc,EAAGG,OAAR,KACA,4BAAKH,EAAGI,W,+jBCAd,IAAMC,EAAUC,EAAQ,IAExBC,IAAMC,Y,IAEeC,E,2MACnBC,MAAQ,CACNZ,aAAc,GACdJ,QAAS,G,EAGXT,UAAY,SAAA0B,GAAM,IACRC,EAAUD,EAAEE,OAAOC,cAAcC,kBAAjCH,MACRD,EAAEE,OAAOC,cAAcC,kBAAkBH,MAAQ,KACjD,IAAMI,EAAUL,EAAEE,OAAOI,YACnBC,EAAiB,CACrBhB,GAAIG,EAAQc,WACZjC,KAAM8B,EACNb,OAAQiB,OAAOR,GACfR,MAAM,IAAIiB,MAAOC,kBAEbC,EAAgB,CACpBC,SAAU,aACVC,UAAW,KACXC,cAAc,GAahB,EAAKC,UAAS,SAAAC,GACZ,MAAgB,aAAZZ,GAA0BJ,EAAQgB,EAAGlC,SAXzCa,YAAM,oSAAD,KACAgB,EADA,CAEHrC,KAAMqB,IAAMsB,KAAKC,SAWV,KAEQ,aAAZd,GAAsC,YAAZA,IAA0BJ,EAAQ,EACxD,CACLd,aAAa,CAAEoB,GAAH,mBAAsBU,EAAG9B,eACrCJ,QACE,EAAKqC,sBAAsB,UAA3B,CACEb,GADF,mBAEKU,EAAG9B,gBAER,EAAKiC,sBAAsB,WAA3B,CACEb,GADF,mBAEKU,EAAG9B,kBApBdS,YAAM,2QAAD,KACAgB,EADA,CAEHrC,KAAMqB,IAAMsB,KAAKG,WAuBZ,Q,EAIXD,sBAAwB,SAAC7C,EAAM+C,GAI7B,OAHcA,EAAIC,QAAO,SAACC,EAAKnC,GAC7B,OAAOA,EAAGd,OAASA,EAAOiD,EAAMnC,EAAGG,OAASgC,IAC3C,I,wEAII,MAE2BC,KAAK1B,MAA/BhB,EAFD,EAECA,QAASI,EAFV,EAEUA,aACjB,OACE,yBAAKuC,UAAWC,IAAEC,WAChB,6BAASF,UAAWC,IAAEE,UACpB,kBAAC,EAAD,CAAUvD,UAAWmD,KAAKnD,aAE5B,6BAASoD,UAAWC,IAAEE,UACpB,kBAAC,EAAD,CACE9C,QAASA,EACTC,QAASyC,KAAKL,sBAAsB,UAAWjC,GAC/CF,SAAUwC,KAAKL,sBAAsB,WAAYjC,MAGpDA,EAAa2C,OAAS,EACrB,2BAAOJ,UAAWC,IAAEI,OAClB,2BAAOnD,MAAO,CAAEoD,UAAW,WACzB,4BACE,2CACA,sCACA,sCAGJ,2BAAON,UAAWC,IAAEI,OAClB,kBAAC,EAAD,CAAoB5C,aAAcA,MAItC,uBAAGP,MAAO,CAAEoD,UAAW,WAAvB,iC,GA5F6BC,aCHxBC,EANH,kBACV,oCACE,kBAAC,EAAD,QCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ecf6e0be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__BewSV\",\"controls\":\"Dashboard_controls__36nfo\",\"counter\":\"Dashboard_counter__1T6aN\",\"table\":\"Dashboard_table__1cSer\",\"tbody\":\"Dashboard_tbody__2qK2b Dashboard_table__1cSer\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Controls = ({ operation }) => (\n  <>\n    <input type=\"number\" min=\"0.01\" name=\"amount\" placeholder=\"0\" />\n    <button onClick={operation} type=\"button\" style={{ cursor: 'pointer' }}>\n      Deposit\n    </button>\n    <button onClick={operation} type=\"button\" style={{ cursor: 'pointer' }}>\n      Withdraw\n    </button>\n  </>\n);\n\nControls.propTypes = PropTypes.shape({\n  operation: PropTypes.func,\n}).isRequired;\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n  <>\n    {/* eslint-disable-next-line */}\n    <span>⬆️{deposit}$</span>\n    {/* eslint-disable-next-line */}\n    <span>⬇️{withdraw}$</span>\n    <span>Balance: {balance}$</span>\n  </>\n);\n\nBalance.propTypes = PropTypes.objectOf(PropTypes.number).isRequired;\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ transactions }) =>\n  transactions.map(el => (\n    <tr key={el.id}>\n      <td>{el.type}</td>\n      <td>{el.amount}$</td>\n      <td>{el.date}</td>\n    </tr>\n  ));\n\nTransactionHistory.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    date: PropTypes.string,\n    amount: PropTypes.number,\n  }),\n).isRequired;\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Dashboard.module.css';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst shortid = require('shortid');\n\ntoast.configure();\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  operation = e => {\n    const { value } = e.target.parentElement.firstElementChild;\n    e.target.parentElement.firstElementChild.value = null;\n    const depType = e.target.textContent;\n    const newTransaction = {\n      id: shortid.generate(),\n      type: depType,\n      amount: Number(value),\n      date: new Date().toLocaleString(),\n    };\n    const toastSettings = {\n      position: 'top-center',\n      autoClose: 2500,\n      pauseOnHover: false,\n    };\n    const error = () =>\n      toast('На счету недостаточно средств для проведения операции!', {\n        ...toastSettings,\n        type: toast.TYPE.ERROR,\n      });\n    const warning = () =>\n      toast('Введите корректную сумму для проведения операции!', {\n        ...toastSettings,\n        type: toast.TYPE.WARNING,\n      });\n\n    this.setState(ps => {\n      if (depType === 'Withdraw' && value > ps.balance) {\n        error();\n        return {};\n      }\n      if ((depType === 'Withdraw' || depType === 'Deposit') && value > 0) {\n        return {\n          transactions: [newTransaction, ...ps.transactions],\n          balance:\n            this.sumTransactionsOfType('Deposit', [\n              newTransaction,\n              ...ps.transactions,\n            ]) -\n            this.sumTransactionsOfType('Withdraw', [\n              newTransaction,\n              ...ps.transactions,\n            ]),\n        };\n      }\n      warning();\n      return {};\n    });\n  };\n\n  sumTransactionsOfType = (type, arr) => {\n    const value = arr.reduce((acc, el) => {\n      return el.type === type ? acc + el.amount : acc;\n    }, 0);\n    return value;\n  };\n\n  render() {\n    // console.log('Dashbord.props :', this.props);\n    const { balance, transactions } = this.state;\n    return (\n      <div className={s.dashboard}>\n        <section className={s.controls}>\n          <Controls operation={this.operation} />\n        </section>\n        <section className={s.controls}>\n          <Balance\n            balance={balance}\n            deposit={this.sumTransactionsOfType('Deposit', transactions)}\n            withdraw={this.sumTransactionsOfType('Withdraw', transactions)}\n          />\n        </section>\n        {transactions.length > 0 ? (\n          <table className={s.table}>\n            <thead style={{ textAlign: 'center' }}>\n              <tr>\n                <th>Transaction</th>\n                <th>Amount</th>\n                <th>Date</th>\n              </tr>\n            </thead>\n            <tbody className={s.table}>\n              <TransactionHistory transactions={transactions} />\n            </tbody>\n          </table>\n        ) : (\n          <p style={{ textAlign: 'center' }}>You have no transactions</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}