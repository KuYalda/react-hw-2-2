{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/Controls/index.js","components/Balance/index.js","components/TransactionHistory/index.js","components/Dashboard/index.js","App.js","index.js"],"names":["module","exports","Controls","operation","useState","sum","setSum","type","min","name","value","onChange","target","Number","onClick","style","cursor","Balance","balance","deposit","withdraw","TransactionHistory","transactions","map","el","key","id","amount","date","shortid","require","toast","configure","toastSettings","position","autoClose","pauseOnHover","error","TYPE","ERROR","warning","WARNING","Dashboard","state","depType","newTransaction","generate","Date","toLocaleString","setState","ps","sumTransactionsOfType","arr","reduce","acc","this","className","s","dashboard","controls","length","table","textAlign","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65a3d1ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__BewSV\",\"controls\":\"Dashboard_controls__36nfo\",\"counter\":\"Dashboard_counter__1T6aN\",\"table\":\"Dashboard_table__1cSer\",\"tbody\":\"Dashboard_tbody__2qK2b Dashboard_table__1cSer\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Controls({ operation }) {\n  const [sum, setSum] = useState('');\n  const handleChange = ({ target }) => setSum(Number(target.value));\n  const handleDeposit = () => {\n    operation(sum, 'Deposit');\n    setSum('');\n  };\n  const handleWithdraw = () => {\n    operation(sum, 'Withdraw');\n    setSum('');\n  };\n\n  return (\n    <>\n      <input\n        type=\"number\"\n        min=\"0.01\"\n        name=\"amount\"\n        // placeholder=\"0\n        value={sum}\n        onChange={handleChange}\n      />\n      <button\n        onClick={handleDeposit}\n        type=\"button\"\n        style={{ cursor: 'pointer' }}\n      >\n        Deposit\n      </button>\n      <button\n        onClick={handleWithdraw}\n        type=\"button\"\n        style={{ cursor: 'pointer' }}\n      >\n        Withdraw\n      </button>\n    </>\n  );\n}\n\nControls.propTypes = PropTypes.shape({\n  operation: PropTypes.func,\n}).isRequired;\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n  <>\n    {/* eslint-disable-next-line */}\n    <span>⬆️{deposit}$</span>\n    {/* eslint-disable-next-line */}\n    <span>⬇️{withdraw}$</span>\n    <span>Balance: {balance}$</span>\n  </>\n);\n\nBalance.propTypes = PropTypes.objectOf(PropTypes.number).isRequired;\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ transactions }) =>\n  transactions.map(el => (\n    <tr key={el.id}>\n      <td>{el.type}</td>\n      <td>{el.amount}$</td>\n      <td>{el.date}</td>\n    </tr>\n  ));\n\nTransactionHistory.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    date: PropTypes.string,\n    amount: PropTypes.number,\n  }),\n).isRequired;\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Dashboard.module.css';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst shortid = require('shortid');\n\ntoast.configure();\n\nconst toastSettings = {\n  position: 'top-center',\n  autoClose: 2500,\n  pauseOnHover: false,\n};\nconst error = () =>\n  toast('На счету недостаточно средств для проведения операции!', {\n    ...toastSettings,\n    type: toast.TYPE.ERROR,\n  });\nconst warning = () =>\n  toast('Введите корректную сумму для проведения операции!', {\n    ...toastSettings,\n    type: toast.TYPE.WARNING,\n  });\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  operation = (sum, depType) => {\n    const newTransaction = {\n      id: shortid.generate(),\n      type: depType,\n      amount: sum,\n      date: new Date().toLocaleString(),\n    };\n    this.setState(ps => {\n      if (depType === 'Withdraw' && sum > ps.balance) {\n        error();\n        return {};\n      }\n      if ((depType === 'Withdraw' || depType === 'Deposit') && sum > 0) {\n        return {\n          transactions: [newTransaction, ...ps.transactions],\n          balance:\n            this.sumTransactionsOfType('Deposit', [\n              newTransaction,\n              ...ps.transactions,\n            ]) -\n            this.sumTransactionsOfType('Withdraw', [\n              newTransaction,\n              ...ps.transactions,\n            ]),\n        };\n      }\n      warning();\n      return {};\n    });\n  };\n\n  sumTransactionsOfType = (type, arr) => {\n    const value = arr.reduce((acc, el) => {\n      return el.type === type ? acc + el.amount : acc;\n    }, 0);\n    return value;\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    return (\n      <div className={s.dashboard}>\n        <section className={s.controls}>\n          <Controls operation={this.operation} />\n        </section>\n        <section className={s.controls}>\n          <Balance\n            balance={balance}\n            deposit={this.sumTransactionsOfType('Deposit', transactions)}\n            withdraw={this.sumTransactionsOfType('Withdraw', transactions)}\n          />\n        </section>\n        {transactions.length > 0 ? (\n          <table className={s.table}>\n            <thead style={{ textAlign: 'center' }}>\n              <tr>\n                <th>Transaction</th>\n                <th>Amount</th>\n                <th>Date</th>\n              </tr>\n            </thead>\n            <tbody className={s.table}>\n              <TransactionHistory transactions={transactions} />\n            </tbody>\n          </table>\n        ) : (\n          <p style={{ textAlign: 'center' }}>You have no transactions</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}